source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(Rcpp)
library(inline)
src <- '
Rcpp::NumericVector xa(a);
Rcpp::NumericVector xb(b);
int n_xa = xa.size(), n_xb = xb.size();
Rcpp::NumericVector xab(n_xa + n_xb - 1);
for (int i = 0; i < n_xa; i++){
for (int j = 0; j < n_xb; j++){
xab[i + j] += xa[i] * xb[j];
}
}
return xab;
'
fun <- cxxfunction(signature(a = "numeric", b = "numeric"), src, plugin = "Rcpp")
fun(1:3, 1:4)
data
source('~/.active-rstudio-document', echo=TRUE)
library(Rcpp)
library(inline)
pwd()
setwd()
getwd()
monte_cpp = cppFunction(cpp_code)
source('~/.active-rstudio-document', echo=TRUE)
monte_cpp(100)
monte_cpp(10000)
monte_cpp(N)
monte_cpp(N)
N = 1000000
monte_cpp(N)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(benchmark)
library(rbenchmark)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
setwd("/Users/taku/analyze_mlbdata_with_R/rchart/")
library(shiny)
runExample("01_hello")
setwd("/Users/taku/analyze_mlbdata_with_R/shiny//shiny_test")
runApp(""~/shinyapp)
runApp("~/shinyapp")
runApp("/shinyapp")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shinyapp")
runApp("/Users/taku/analyze_mlbdata_with_R/shinyapp")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
dist = rnorm(100)
qplot(dist, geom="density")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
qplot(dist, geom="density")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
runApp("/Users/taku/analyze_mlbdata_with_R/shiny/shiny_test")
library(shiny)
library(lahman)
library(dplyr)
baseball
head(baseball)
setwd("/Users/taku/analyze_mlbdata_with_R/shiny//shiny_test2")
setwd("/Users/taku/analyze_mlbdata_with_R/shiny/")
runApp("~/shiny_test2")
runApp("/shiny_test2")
runApp("shiny_test2")
install.packages("dataset")
library(datasets)
runApp("shiny_test2")
runApp("shiny_test2")
runApp("shiny_test2")
runApp("shiny_test2")
runApp("shiny_test2")
getwd()
runApp("shiny_test3")
runApp("shiny_test3")
runApp("shiny_test3")
runApp("shiny_test3")
runApp("shiny_test3")
runApp("shiny_test3")
mtcars
runApp("shiny_test1")
runApp("shiny_test1")
getwd()
runApp("shiny_test")
runApp("shiny_test")
runApp("slider_test")
runApp("slider_test")
runApp("shiny_test")
runApp("shiny_test")
runApp("shiny_test")
source('~/.active-rstudio-document', echo=TRUE)
runApp("pca_test")
source('~/.active-rstudio-document', echo=TRUE)
runApp("pca_test")
runApp("pca_test")
runApp("slider_test")
runApp("slider_test")
runApp("pca_test")
runApp("pca_test")
runApp("pca_test")
source('~/.active-rstudio-document', echo=TRUE)
summary(result)
summary(result %>% rotated)
result %>% rotated
result %>% rotated %>% plot
result %>% rotated %>% plot %>% cbind(lab)
result %>% rotated %>% plot
result %>% rotated %>% cbind(lab)
df = result %>% rotated %>% cbind(lab)
setnames(df, c("x", "y", "species"))
setnames(df, c("x", "y", "species"))
df
setnames(df, c("x", "y", "species"))
df %>% class
df = df %>% as.data.table
setnames(df, c("x", "y", "species"))
df
ggplot(df, aes(x=x, y=y, col = species))
ggplot(df, aes(x=x, y=y, col = species)) + geom_point()
ggplot(df, aes(x=x, y=y, shape=factor(species))) + geom_point()
ggplot(df, aes(x=x, y=y, shape=factor(species))) + geom_point() + theme_bw
ggplot(df, aes(x=x, y=y, shape=factor(species))) + geom_point() + theme_bw()
runApp("pca_test")
runApp("pca_test")
runApp("pca_test")
runApp("pca_test")
runApp("pca_test")
runApp("pca_test")
runApp("pca_test")
runApp("pca_test")
runApp("pca_test")
runApp("pca_test")
ggplot(df, aes(x=x, y=y, shape=factor(species))) + geom_point() + theme_bw()
runApp("pca_test")
runApp("pca_test")
runApp("pca_test")
runApp("pca_test")
runGist(3239667)
runApp("pca_test")
runApp("pca_test")
runGist(9770287)
runGist(9770287)
runExample("01_hello")
runGist(9770287)
param = 0.001
data(iris)
iris_data = iris[, 1:4]
iris_lab = iris[, 5]
#kernel pca
#kernel = gaussian, sigma=0.0003
#feature dim =2
result = kpca(~., data=iris_data, features=2, kpar=list(sigma=param))
df = rotated(result)
df_lab = df %>%
as.data.table %>%
cbind(iris.lab) %>%
setnames(c("x", "y","species"))
title = paste( "kernel PCA", "(parameter sigma = ", param, ")")
gp = ggplot(df_lab, aes(x=x, y=y, shape=species, col = species)) +
geom_point(size=4) + ggtitle(title) +
theme(plot.title = element_text(size = 20, face = "bold"))
print(gp)
runGist(9770287)
source('~/.active-rstudio-document', echo=TRUE)
runGist(9770287)
runApp("batting_legends")
runApp("batting_legends")
runApp("batting_legends")
runApp("batting_legends")
library(lahman)
library(dpylr)
library(dplyr)
data(Batting)
data(batting)
library(Lahman)
Batting
Batting %>% as.data.table
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
Batting %>% as.data.table
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
range = c(1950, 2012)
batting_legend_data =
Batting %>% innner_join(batting_legend_career, by = playerID)
Batting %>% innner_join(batting_legend_career, by = "playerID"
Batting %>% innner_join(batting_legend_career, by = "playerID"
batting_legend_data =
Batting %>% as.data.table %>%
innner_join(batting_legend_career, by = "playerID")
batting_legend_data =
Batting %>% as.data.table %>%
inner_join(batting_legend_career, by = "playerID")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
batting_legend_career
batting_legend_data
source('~/.active-rstudio-document', echo=TRUE)
dim(batting_legend_career)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
batting_legend_data %>%
group_by(playerID, yearID, add=FALSE) %>%
dplyr::summarise(H = sum(H), start = start)
batting_legend_data %>%
group_by(playerID, yearID) %>%
dplyr::summarise(H = sum(H), start = start)
batting_legend_data %>%
group_by(playerID, yearID) %>%
summarise(H = sum(H), start = start)
source('~/.active-rstudio-document', echo=TRUE)
batting_legend_data %>%
group_by(playerID, yearID) %>%
dplyr::summarise(H = sum(H), start = start)
batting_legend_data
source('~/.active-rstudio-document', echo=TRUE)
batting_legend_data %>%
group_by(playerID, yearID) %>%
dplyr::summarise(H = sum(H))
names(batting_legend_data)
source('~/.active-rstudio-document', echo=TRUE)
names(batting_legend_data)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
batting_legend_data %>%
group_by(playerID) %>%
dplyr::summarise(careerHIT = cumsum(H))
batting_legend_data
batting_legend_data %>%
group_by(playerID) %>%
dplyr::summarise(careerH = cumsum(H))
batting_legend_career_data =
batting_legend_data %>%
group_by(playerID) %>%
dplyr::summarise(yearID = yearID, careerH = cumsum(H))
batting_legend_career_data =
batting_legend_data
batting_legend_data
batting_legend_career_data =
batting_legend_data %>%
group_by(playerID, add=FALSE) %>%
dplyr::summarise(yearID = yearID, careerH = cumsum(H))
batting_legend_data %>%
group_by(playerID, add=FALSE) %>%
dplyr::summarise(yearID = yearID, careerH = cumsum(H))
source('~/.active-rstudio-document', echo=TRUE)
batting_legend_data %>%
group_by(playerID, add=FALSE) %>%
dplyr::summarise(yearID = yearID)
batting_legend_data %>%
group_by(playerID, add=FALSE) %>%
dplyr::summarise(careerH = cumsum(H))
class(batting_legend_data)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
batting_legend_data %>%
as.data.table %>%
group_by(playerID, add=FALSE) %>%
dplyr::summarise(careerH = cumsum(H))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
batting_legend_career_data
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
rp = rPlot(careerH ~ yearID, data = batting_legend_career_data_filtered,
type = "line")
source('~/.active-rstudio-document', echo=TRUE)
rp
rp = rPlot(careerH ~ yearID, data = batting_legend_career_data_filtered,
group = "playerID",
type = "line")
rp
rp = rPlot(careerH ~ yearID, data = batting_legend_career_data_filtered,
groups = "playerID",
type = "line")
rp
rp = rPlot(careerH ~ yearID, data = batting_legend_career_data_filtered,
color = "playerID",
type = "line")
rp
rp = hPlot(careerH ~ yearID, data = batting_legend_career_data_filtered,
color = "playerID",
type = "line")
rp
rp = hPlot(careerH ~ yearID, data = batting_legend_career_data_filtered,
group = "playerID",
type = "line")
rp
rp = hPlot(data = batting_legend_career_data_filtered, x = "yearID", y = "careerH"
group = "playerID",
type = "line")
rp = hPlot(data = batting_legend_career_data_filtered, x = "yearID", y = "careerH",
group = "playerID",
type = "line")
hp = hPlot(data = batting_legend_career_data_filtered,
x = "yearID", y = "careerH",
group = "playerID",
type = "line")
hp
batting_legend_career_data_filtered
hp = hPlot(data = batting_legend_career_data_filtered,
x = "yearID",
y = "careerH",
group = "playerID",
type = "line")
hp
batting_legend_career_data_filtered,
batting_legend_career_data_filtered
hp = hPlot(data = batting_legend_career_data_filtered,
x = "yearID",
y = "careerH",
group = "playerID",
type = "line")
hp = rPlot(data = batting_legend_career_data_filtered,
x = "yearID",
y = "careerH",
group = "playerID",
type = "line")
hp
hp = rPlot(data = batting_legend_career_data_filtered,
x = "yearID",
y = "careerH",
color = "playerID",
type = "line")
hp
hp = nPlot(data = batting_legend_career_data_filtered,
x = "yearID",
y = "careerH",
color = "playerID",
type = "lineChart")
hp
hp = nPlot(data = batting_legend_career_data_filtered,
x = "yearID",
y = "careerH",
color = "playerID",
type = "lineCharts")
hp
hp = nPlot(data = batting_legend_career_data_filtered,
x = "yearID",
y = "careerH",
group = "playerID",
type = "lineChart")
hp
conn = dbConnect(PostgreSQL(), dbname = "baseball_data")
conn = dbConnect(PostgreSQL(), dbname = "baseball_data")
dat = dbReadTable(conn, "fullname_id")
dat
batting_legend_career %>% inner_join(dat, by = "playerID")
dat
dat = dat %>% as.data.table
batting_legend_career
batting_legend_career %>% inner_join(dat, by = "playerID")
dat %>% names
dat %>% setnames("playerID", "fullname")
dat %>% setnames(c("playerID", "fullname"))
dat
batting_legend_career %>% inner_join(dat, by = "playerID")
batting_legend_career %>% head
dat_master = dbReadTable(conn, "master")
dat_master %>% as.data.table()
dat_master = dat_master %>% as.data.table()
datm_master %>% mutate(fullname = paste(nameFirst, nameLast))
dat_master %>% mutate(fullname = paste(nameFirst, nameLast))
dat_master %>% mutate(fullname = paste(nameFirst, nameLast)) %%
dat_master %>% mutate(fullname = paste(nameFirst, nameLast)) %>%
batting_legend_career %>% head
dat_master %>% mutate(fullname = paste(nameFirst, nameLast)) %>% select(lahman40ID, fullname)
fullname_id = dat_master %>% mutate(fullname = paste(nameFirst, nameLast)) %>% select(lahman40ID, fullname)
batting_legend_career %>% inner_join(fullname_id, by = "playerID")
fullname_id = dat_master %>% mutate(fullname = paste(nameFirst, nameLast)) %>% select(lahman40ID, fullname) %>% setnames(c("playerID", "fullname"))
batting_legend_career %>% inner_join(fullname_id, by = "playerID")
batting_legend_career %>% inner_join(fullname_id, by = "playerID") %>%
select("playerID", "fullname", "careerHIT")
batting_legend_career %>% inner_join(fullname_id, by = "playerID") %>%
dplyr::select("playerID", "fullname", "careerHIT")
batting_legend_career %>% inner_join(fullname_id, by = "playerID")
batting_legend_career %>% inner_join(fullname_id, by = "playerID") %>%
dplyr::select("playerID", "fullname", "careerHit")
batting_legend_career %>% inner_join(fullname_id, by = "playerID") %>%
write.csv("legends.csv", quote=FALSE, row.names=FALSE)
getwd()
fread("legends.csv")
fread("/Users/taku/analyze_mlbdata_with_R/shiny/batting_legends/legends.csv")
setwd("/Users/taku/analyze_mlbdata_with_R/shiny/batting_legends/")
fullname_id = fread("legends.csv")
batting_legend_career_data %>% inner_join(fullname_id, by = "playerID")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ggplot(data = batting_legend_career_data_filtered, aes(x = yearID, y = careerH, color = fullname))
ggplot(data = batting_legend_career_data_filtered, aes(x = yearID, y = careerH, color = fullname)) +
geom_line()
hp = hPlot(data = batting_legend_career_data_filtered,
x = "yearID", y = "careerH",
group = "fullname",
type = "lineChart")
hp = hPlot(data = batting_legend_career_data_filtered,
careerH ~ yearID,
group = "fullname",
type = "lineChart")
batting_legend_career_data_filtered =
batting_legend_career_data_fullname %>%
filter(start >= range[1] & end <= range[2])
batting_legend_career_data_filtered
batting_legend_career_data_filtered =
batting_legend_career_data_fullname %>%
filter(start >= range[1] & end <= range[2]) %>%
select(fullname, yearID, careerH)
hp = hPlot(data = batting_legend_career_data_filtered,
careerH ~ yearID,
group = "fullname",
type = "lineChart")
hp = hPlot(data = batting_legend_career_data_filtered,
careerH ~ yearID,
group = "fullname",
type = "line")
hp = hPlot(data = batting_legend_career_data_filtered, careerH ~ yearID,
group = "fullname",
type = "line")
source('~/analyze_mlbdata_with_R/shiny/batting_legends/makedata.R', echo=TRUE)
